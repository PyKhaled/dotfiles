# ==============================================================================
# git

function git-pull() {

  git branch -r | grep -v '\->' | while read remote; do git branch --track "${remote#origin/}" "$remote" 2> /dev/null; done
  git pull --all
}

function git-prune() {

  git fetch --prune
  for branch in $(git for-each-ref --format '%(refname) %(upstream:track)' refs/heads | awk '$2 == "[gone]" {sub("refs/heads/", "", $1); print $1}'); do
    git branch -D $branch
  done
  for branch in $(git branch -vv | cut -c 3- | awk '$3 !~/\[origin/ { print $1 }'); do
    git branch -D $branch
  done
}

function git-track() {

  branch=$(git rev-parse --abbrev-ref HEAD)
  git branch --set-upstream-to=origin/$branch $branch
}

# ==============================================================================
# Miscellaneous functions

# Generate a random string ('A-Za-z0-9') with the given length
#
# Usage:
#   $ ./random 32
#
function random() {

  chars='A-Za-z0-9'
  length=${1:-32}

  cat /dev/urandom | env LC_ALL=C tr -dc $chars | fold -w $length | head -n 1
}

# Convert a decimal number to a byte unit
#
# Usage:
#   echo 1234567890 | byte-me
#
function byte-me() {

  local list="bytes,KB,MB,GB,TB,PB,EB,ZB,YB"
  local p=1
  local data=$(cat)
  local v=$(echo "scale=2; $data / 1" | bc)
  local i=$(echo $v / 1024 | bc)
  while [ ! $i = "0" ]; do
    let p=p+1
    v=$(echo "scale=2; $v / 1024" | bc)
    i=$(echo $v / 1024 | bc)
  done
  echo $v$(echo $list | cut -f$p -d,)
}
